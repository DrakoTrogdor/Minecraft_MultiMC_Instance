# AutoSwitch Configuration File
# See https://github.com/dexman545/Fabric-Autoswitch/wiki/Configuration for more details.
# Setting an option to 'true' will enable it's stated behavior; using 'false' wil disable it.


# When enabled, the config files will be regenerated upon every MC startup. This means any user-added config entries
# will be moved to the bottom in the 'Overrides' section. When disabled, the files will only be rewritten when the
# config version does not match expected one. Do note that the material and usable configs will not regenerate if
# removed with this disabled if the main config was not also removed.
# Default Value: false
alwaysRewriteConfigs = false

# If enabled, AutoSwitch will attempt to avoid recalculating hotbar slots to be used on a particular target. Each time
# that slot is modified, it's cached data is thrown out. This can benefit performance.
# Default Value: true
cacheSwitchResults = true

# Checks if a saddlable entity has a saddle for use action to switch. Does not allow switching to a saddle on hotbar.
# Default Value: true
checkSaddlableEntitiesForSaddle = true

# No touchy! For checking when to regen config files!
configVersion = 2.11.3-alpha.1

# Let AutoSwitch prevent breaking a block with an empty collision box (ie. tall grass) when trying to attack a mob.
# Default Value: true
controlMowingWhenFighting = true

# Disable the swinging of the hand when trying to mow when fighting.
# Default Value: true
disableHandSwingWhenMowing = true

# This setting is meant to disable config GUI integration if in future the feature breaks, but the rest of AutoSwitch
# does not. Fallbacks are in place to ensure any changes to Minecraft do not break integration, this is simply a more
# extreme kill switch.
# Default Value: false
disableModMenuConfig = false

# Will force use of the toggle key in order to enable switching
# Default Value: false
disableSwitchingOnStartup = true

# Display toggle message, set to false to remove it.
# Default Value: true
displayToggleMsg = true

# Enable dumb check for tool harvestablity on the targeted block.
# Default Value: true
dumbMiningLevelCheck = true

# Prefer tool with minimum mining level.
# Default Value: true
preferMinimumViableTool = true

# Switch used tool to offhand if no item is there.
# Default Value: true
preserveOffhandItem = true

# Switch used tool to offhand.
# Default Value: true
putUseActionToolInOffHand = true

# Ignore tools with 0 energy/durability
# Default Value: true
skipDepletedItems = true

# Delay in seconds from triggering of normal switch action on the basis that the previous switch has not been undone
# via switchback. Resolution on the order of ticks. 0.05 is 1 tick of delay.
# Default Value: 0.05
switchDelay = 0.05

# AutoSwitch for mining.
# Default Value: true
switchForBlocks = true

# AutoSwitch for attacking mobs.
# Default Value: true
switchForMobs = true

# AutoSwitch functionality in creative mode.
# Default Value: false
switchInCreative = false

# Allow AutoSwitch when in multiplayer.
# Default Value: true
switchInMP = true

# Switch for use-action of a tool.
# Default Value: true
switchUseActions = true

# Return to previous slot when not attacking a block.
# Default Value: true
switchbackBlocks = true

# Delay in seconds from end of hand swinging to perform switchback action. Resolution on the order of ticks. 0.05 is 1
# tick of delay.
# Default Value: 0.05
switchbackDelay = 0.05

# Return to previous slot after attacking a mob.
# Default Value: true
switchbackMobs = true

# Before switching back when using the 'attack' action, wait for the attack cooldown to finish. Fixes attacks not
# doing a lot of damage to mobs, and makes switchback for blocks visually smoother. 
# Acceptable values: BOTH, MOBS, BLOCKS, NONE
# Default Value: MOBS
switchbackWaitsForCooldown = BOTH

# Display toggle message above hotbar. Set to false for normal chat message.
# Default Value: true
toggleMsgOverHotbar = true

# Enable to allow target list to stack enchantments. Disable for old behavior. When enabled, a target selector of
# 'tool;fortune, tool;mending' will prefer a tool with both fortune and mending over one with just fortune. This differs
# from 'tool;fortune&mending' in that only one enchantment is required for the tool to be selected, rather than both
# fortune and mending.
# Default Value: true
toolEnchantmentsStack = true

# Will ignore tools that are about to break when considering which tool to switch to.
# Default Value: true
tryPreserveDamagedTools = true

# Enable switching to items with no durability when no tool is found.
# Default Value: true
useNoDurablityItemsWhenUnspecified = true

# Tools with enchantments that increase attack damage will be rated higher. This means an axe with sharpness can be
# preferred over a sword. Set to true to enable this functionality. False ignores the enchantments.
# Default Value: false
weaponRatingIncludesEnchants = false

# Overrides
########################################################################################################################

toolPriorityOrder = sword > axe > pickaxe

switchbackWaitsForCooldownWhenAttackingMobs = true
